# NOTE: This file is auto generated by OpenAPI Generator 7.5.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule YNAB.Model.SaveTransactionWithIdOrImportId do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :account_id,
    :date,
    :amount,
    :payee_id,
    :payee_name,
    :category_id,
    :memo,
    :cleared,
    :approved,
    :flag_color,
    :subtransactions,
    :id,
    :import_id
  ]

  @type t :: %__MODULE__{
          :account_id => String.t() | nil,
          :date => Date.t() | nil,
          :amount => integer() | nil,
          :payee_id => String.t() | nil,
          :payee_name => String.t() | nil,
          :category_id => String.t() | nil,
          :memo => String.t() | nil,
          :cleared => YNAB.Model.TransactionClearedStatus.t() | nil,
          :approved => boolean() | nil,
          :flag_color => YNAB.Model.TransactionFlagColor.t() | nil,
          :subtransactions => [YNAB.Model.SaveSubTransaction.t()] | nil,
          :id => String.t() | nil,
          :import_id => String.t() | nil
        }

  alias YNAB.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:date, :date, nil)
    |> Deserializer.deserialize(:cleared, :struct, YNAB.Model.TransactionClearedStatus)
    |> Deserializer.deserialize(:flag_color, :struct, YNAB.Model.TransactionFlagColor)
    |> Deserializer.deserialize(:subtransactions, :list, YNAB.Model.SaveSubTransaction)
  end
end
