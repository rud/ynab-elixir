# NOTE: This file is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit manually.

defmodule YNAB.Api.ScheduledTransactions do
  @moduledoc """
  API calls for all endpoints tagged `ScheduledTransactions`.
  """
  alias YNAB.Client
  import YNAB.RequestBuilder

  @doc """
  Single scheduled transaction
  Returns a single scheduled transaction

  ## Parameters

  - client (YNAB.Client): Connection to server
  - budget_id (String.t): The id of the budget (\&quot;last-used\&quot; can be used to specify the last used budget and \&quot;default\&quot; can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget)
  - scheduled_transaction_id (String.t): The id of the scheduled transaction
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %YNAB.Model.ScheduledTransactionResponse{}} on success
  {:error, info} on failure
  """
  @spec get_scheduled_transaction_by_id(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, YNAB.Model.ScheduledTransactionResponse.t()} | {:error, Tesla.Env.t()}
  def get_scheduled_transaction_by_id(client, budget_id, scheduled_transaction_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/budgets/#{budget_id}/scheduled_transactions/#{scheduled_transaction_id}")
    |> Enum.into([])
    |> (&Client.request(client, &1)).()
    |> decode(%YNAB.Model.ScheduledTransactionResponse{})
  end

  @doc """
  List scheduled transactions
  Returns all scheduled transactions

  ## Parameters

  - client (YNAB.Client): Connection to server
  - budget_id (String.t): The id of the budget (\&quot;last-used\&quot; can be used to specify the last used budget and \&quot;default\&quot; can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget)
  - opts (KeywordList): [optional] Optional parameters
    - :last_knowledge_of_server (integer()): The starting server knowledge.  If provided, only entities that have changed since last_knowledge_of_server will be included.

  ## Returns

  {:ok, %YNAB.Model.ScheduledTransactionsResponse{}} on success
  {:error, info} on failure
  """
  @spec get_scheduled_transactions(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, YNAB.Model.ScheduledTransactionsResponse.t()} | {:error, Tesla.Env.t()}
  def get_scheduled_transactions(client, budget_id, opts \\ []) do
    optional_params = %{
      last_knowledge_of_server: :query
    }

    %{}
    |> method(:get)
    |> url("/budgets/#{budget_id}/scheduled_transactions")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Client.request(client, &1)).()
    |> decode(%YNAB.Model.ScheduledTransactionsResponse{})
  end
end
