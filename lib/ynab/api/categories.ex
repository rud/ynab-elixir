# NOTE: This file is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit manually.

defmodule YNAB.Api.Categories do
  @moduledoc """
  API calls for all endpoints tagged `Categories`.
  """
  alias YNAB.Client
  import YNAB.RequestBuilder

  @doc """
  List categories
  Returns all categories grouped by category group.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).

  ## Parameters

  - client (YNAB.Client): Connection to server
  - budget_id (String.t): The id of the budget (\&quot;last-used\&quot; can be used to specify the last used budget and \&quot;default\&quot; can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget)
  - opts (KeywordList): [optional] Optional parameters
    - :last_knowledge_of_server (integer()): The starting server knowledge.  If provided, only entities that have changed since last_knowledge_of_server will be included.

  ## Returns

  {:ok, %YNAB.Model.CategoriesResponse{}} on success
  {:error, info} on failure
  """
  @spec get_categories(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, YNAB.Model.CategoriesResponse.t()} | {:error, Tesla.Env.t()}
  def get_categories(client, budget_id, opts \\ []) do
    optional_params = %{
      last_knowledge_of_server: :query
    }

    %{}
    |> method(:get)
    |> url("/budgets/#{budget_id}/categories")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Client.request(client, &1)).()
    |> decode(%YNAB.Model.CategoriesResponse{})
  end

  @doc """
  Single category
  Returns a single category.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).

  ## Parameters

  - client (YNAB.Client): Connection to server
  - budget_id (String.t): The id of the budget (\&quot;last-used\&quot; can be used to specify the last used budget and \&quot;default\&quot; can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget)
  - category_id (String.t): The id of the category
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %YNAB.Model.CategoryResponse{}} on success
  {:error, info} on failure
  """
  @spec get_category_by_id(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, YNAB.Model.CategoryResponse.t()} | {:error, Tesla.Env.t()}
  def get_category_by_id(client, budget_id, category_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/budgets/#{budget_id}/categories/#{category_id}")
    |> Enum.into([])
    |> (&Client.request(client, &1)).()
    |> decode(%YNAB.Model.CategoryResponse{})
  end

  @doc """
  Single category for a specific budget month
  Returns a single category for a specific budget month.  Amounts (budgeted, activity, balance, etc.) are specific to the current budget month (UTC).

  ## Parameters

  - client (YNAB.Client): Connection to server
  - budget_id (String.t): The id of the budget (\&quot;last-used\&quot; can be used to specify the last used budget and \&quot;default\&quot; can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget)
  - month (Date.t): The budget month in ISO format (e.g. 2016-12-01) (\&quot;current\&quot; can also be used to specify the current calendar month (UTC))
  - category_id (String.t): The id of the category
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %YNAB.Model.CategoryResponse{}} on success
  {:error, info} on failure
  """
  @spec get_month_category_by_id(Tesla.Env.client(), String.t(), Date.t(), String.t(), keyword()) ::
          {:ok, YNAB.Model.CategoryResponse.t()} | {:error, Tesla.Env.t()}
  def get_month_category_by_id(client, budget_id, month, category_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/budgets/#{budget_id}/months/#{month}/categories/#{category_id}")
    |> Enum.into([])
    |> (&Client.request(client, &1)).()
    |> decode(%YNAB.Model.CategoryResponse{})
  end

  @doc """
  Update a category for a specific month
  Update a category for a specific month

  ## Parameters

  - client (YNAB.Client): Connection to server
  - budget_id (String.t): The id of the budget (\&quot;last-used\&quot; can be used to specify the last used budget and \&quot;default\&quot; can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget)
  - month (Date.t): The budget month in ISO format (e.g. 2016-12-01) (\&quot;current\&quot; can also be used to specify the current calendar month (UTC))
  - category_id (String.t): The id of the category
  - data (SaveMonthCategoryWrapper): The category to update
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %YNAB.Model.SaveCategoryResponse{}} on success
  {:error, info} on failure
  """
  @spec update_month_category(
          Tesla.Env.client(),
          String.t(),
          Date.t(),
          String.t(),
          YNAB.Model.SaveMonthCategoryWrapper.t(),
          keyword()
        ) :: {:ok, YNAB.Model.SaveCategoryResponse.t()} | {:error, Tesla.Env.t()}
  def update_month_category(client, budget_id, month, category_id, data, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/budgets/#{budget_id}/months/#{month}/categories/#{category_id}")
    |> add_param(:body, :data, data)
    |> Enum.into([])
    |> (&Client.request(client, &1)).()
    |> decode(%YNAB.Model.SaveCategoryResponse{})
  end
end
